#!/bin/bash

PkgHome="https://go.dev/dl/"

# git clone https://go.googlesource.com/go -b go$Version --depth 1 go-$Version

SrcDir=$OrigSrcDir/src
export LC_ALL=C
unset pkg_configure

make_env() {
    # Slackware
    # If we already have a Go compiler installed, use it to compile Go:
    local exe=$(command -v go)
    local dir
    if [[ $exe ]]; then
        dir=$(readlink -f "$exe") # .../bin/go
        dir=${dir%/*}/.. # .../bin/..
        dir=$(realpath "$dir")
        export GOROOT_BOOTSTRAP=$dir
    else
        echo "You need bootstrap go: https://go.dev/dl/"
        echo "and make link /usr/bin/go"
        return 1
    fi
    # as of >= go1.5, the cross-compiler does not need to be bootstrap, so the
    # compiler need only be compiled for the host OS, which it detects
    unset GOBIN GOPATH GOOS GOARCH
    # Not sure why, but this causes run.bash to fail --rworkman
    unset BASH_ENV
    # Default GOROOT is the parent directory of all.bash,
    # which is the current directory we're in.
    # Defining it here means we can use it below when building
    # shared libraries
    #export GOROOT=$(pwd)
    export GOROOT=$OrigSrcDir
    # The value of GOROOT once the package is installed
    #export GOROOT_FINAL=$LibDir/go${VERSION}/go
}

pkg_make() {
    # Slackware
    make_env || return 1
    ./make.bash || return 1
}

pkg_install() {
    make_env || return 1

    # Slackware
    # As of go1.5, golang supports shared libraries, so generate them for use.
    # /usr/lib64/go/pkg/linux_amd64_dynlink/ (200 MB)
    "$GOROOT"/bin/go install -buildmode=shared std || return 1

    pkg_cp_dd "$OrigSrcDir" "$GoDir2" -l # hard links (too big dir)
    rm -rf "$GoDir2"/.git*
    rm -f "$GoDir2"/src/*.bat
    ls -d "$GoDir2"/bin/* | pkg_ln_d "$Prefix2/bin"

    # Slackware
    # Ensure libraries have the proper permissions:
    find "$GoDir2" -type f -name "*.so" -exec chmod +x {} \; 2>/dev/null
    # remove tests, nothing needs these at runtime:
    find "$GoDir2"/src -type d -name "testdata" -exec rm -rf {} +
    find "$GoDir2"/src -type f -name "*_test.go" -exec rm -rf {} +
    # remove binary bootstrap (if it exists):
    #rm -rf $PKG/usr/lib$LIBDIRSUFFIX/go-bootstrap
    # Create the profile scripts for setting PATH and env variables:
    pkg_install_mff 0755 "$Etc2"/profile.d/go.csh <<EOF
#!/bin/csh
setenv GOROOT ${GoDir}
#setenv PATH \${GOROOT}/bin:\${PATH}
EOF
    pkg_install_mff 0755 "$Etc2"/profile.d/go.sh <<EOF
#!/bin/sh
export GOROOT="${GoDir}"
#export PATH="\${GOROOT}/bin:\${PATH}"
EOF
}

pkg_install_doc() {
    # Slackware
    mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
    pkg_install_mfd 644 \
        CONTRIBUTING* LICENSE* PATENTS* README* SECURITY* VERSION* \
        "$DocDir2"
}
